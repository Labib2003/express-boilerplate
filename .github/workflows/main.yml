name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Set up environment variables
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run tests
        run: npm test

      - name: Test build the project
        run: npm run build

  dockerize:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/express-boilerplate:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/express-boilerplate:latest

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/express-boilerplate:latest
            docker stop express-boilerplate || true
            docker rm express-boilerplate || true
            docker run -d -p 5000:5000 --name express-boilerplate --env-file .env --restart unless-stopped --log-driver json-file ${{ secrets.DOCKER_USERNAME }}/express-boilerplate:latest
